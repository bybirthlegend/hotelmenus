<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver" 
		/> <beans:property name="url" value="jdbc:mysql://localhost:3306/premsnew" 
		/> <beans:property name="username" value="root" /> <beans:property name="password" 
		value="$sang#server$" /> </beans:bean>
	<!-- Maraidb Datasource -->
	<!-- <beans:bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName"
			value="org.mariadb.jdbc.Driver" />
		value="jdbc:mariadb://139.59.71.101:3306/kgapos" />
		<beans:property name="username" value="remote" />
		<beans:property name="url"
			value="jdbc:mariadb://localhost:3306/kgapos" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="mysqladmin" />
	</beans:bean>  -->
	<!-- Hibernate 5 SessionFactory Bean definition -->
	<beans:bean id="hibernate5AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.sanguine.qrmenu.model.Person</beans:value>
				<beans:value>com.sanguine.qrmenu.model.clsBillHdModel</beans:value>
				<beans:value>com.sanguine.qrmenu.model.clsBillDtlModel</beans:value>
				<beans:value>com.sanguine.qrmenu.model.clsCustomerMasterModel
				</beans:value>
				<beans:value>com.sanguine.qrmenu.model.clsSetupHdModel</beans:value>
				<beans:value>com.sanguine.qrmenu.model.clsCostCenterMasterModel
				</beans:value>
				<beans:value>com.sanguine.qrmenu.model.clsPosMasterModel
				</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.enable_lazy_load_no_trans">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<!-- <beans:bean id="personDAO" class="com.sanguine.qrmenu.dao.PersonDAOImpl"> 
		<beans:property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory" 
		/> </beans:bean> <beans:bean id="personService" class="com.sanguine.qrmenu.service.PersonServiceImpl"> 
		<beans:property name="personDAO" ref="personDAO"></beans:property> </beans:bean> 
		<beans:bean id="menuDAO" class="com.sanguine.qrmenu.dao.clsMenuDAOImpl"> 
		<beans:property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory" 
		/> </beans:bean> <beans:bean id="menuService" class="com.sanguine.qrmenu.service.clsMenuServiceImpl"> 
		<beans:property name="menuDAO" ref="menuDAO"></beans:property> </beans:bean> -->
	<context:component-scan
		base-package="com.sanguine.qrmenu" />
	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate5AnnotatedSessionFactory" />
	</beans:bean>
</beans:beans>
